name: backend

on:
  push:

defaults:
  run:
    working-directory: backend

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Bundler and gem install
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Database create and migrate
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test

      - name: Run rspec
        run: bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2
      - run: |
          gem install bundler
          bundle install
      - name: Run rubocop
        run: bundle exec rubocop

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
  
      - uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.BACKEND_SERVER_SSH_KEY }}
          known_hosts: ${{ secrets.BACKEND_SERVER_KNOWN_HOSTS }}
        
      - name: Deploy code
        run: rsync -auz ./backend/ ${SERVER_USER}@${SERVER_IP}:~/srv
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
        working-directory: .
  
      - name: Restart service
        run: ssh ${SERVER_USER}@${SERVER_IP} sudo systemctl restart backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
        working-directory: .
  
      - name: Check service status
        run: ssh ${SERVER_USER}@${SERVER_IP} systemctl status backend
        env:
          SERVER_USER: ${{ secrets.BACKEND_SERVER_USER }}
          SERVER_IP: ${{ secrets.BACKEND_SERVER_IP }}
        working-directory: .
        